<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.apabi.r2k.admin.model.ReleaseRecord">

	<resultMap id="releaseRecordResult" type="com.apabi.r2k.admin.model.ReleaseRecord">
		<result property="id" column="ID" />
		<result property="orgId" column="ORG_ID" />
		<result property="deviceId" column="DEVICE_ID" />
		<result property="status" column="STATUS" />
		<result property="releaseDate" column="RELEASE_DATE" />
		<result property="crtDate" column="CRT_DATE" />
		<result property="deviceType" column="DEVICE_TYPE" />
		<result property="lastDate" column="LAST_DATE" />
		<result property="columnId" column="COLUMN_ID"/>
		<result property="templateId" column="TEMPLATE_ID"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        	ID ,
        	ORG_ID ,
        	DEVICE_ID ,
        	STATUS ,
        	RELEASE_DATE ,
        	CRT_DATE ,
        	DEVICE_TYPE ,
        	LAST_DATE ,
        	COLUMN_ID,
        	TEMPLATE_ID
	    ]]>
	</sql>

	<sql id="dynamicWhere">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
				<if test="id != null">
				AND ID = #{id}
				</if>
				<if test="orgId != null">
				AND ORG_ID = #{orgId}
				</if>
				<if test="deviceId != null">
				AND DEVICE_ID = #{deviceId}
				</if>
				<if test="status != null">
				AND STATUS = #{status}
				</if>
				<if test="releaseDate != null">
				AND RELEASE_DATE = #{releaseDate}
				</if>
				<if test="crtDate != null">
				AND CRT_DATE = #{crtDate}
				</if>
				<if test="deviceType != null">
				AND DEVICE_TYPE = #{deviceType}
				</if>
				<if test="lastDate != null">
				AND LAST_DATE = #{lastDate}
				</if>
				<if test="columnId != null">
				AND COLUMN_ID = #{columnId}
				</if>
				<if test="templateId != null">
				AND TEMPLATE_ID = #{templateId}
				</if>
		</trim>
	</sql>

	<insert id="insert" parameterType="com.apabi.r2k.admin.model.ReleaseRecord">
    <![CDATA[
        INSERT INTO
        RELEASE_RECORD (
        	ID ,
        	ORG_ID ,
        	DEVICE_ID ,
        	STATUS ,
        	RELEASE_DATE ,
        	CRT_DATE ,
        	DEVICE_TYPE ,
        	LAST_DATE ,
        	COLUMN_ID,
        	TEMPLATE_ID
        ) VALUES (
        	#{id} ,
        	#{orgId} ,
        	#{deviceId} ,
        	#{status} ,
        	#{releaseDate} ,
        	#{crtDate} ,
        	#{deviceType} ,
        	#{lastDate} ,
        	#{columnId},
        	#{templateId}
        )
    ]]>
	</insert>

	<update id="update" parameterType="com.apabi.r2k.admin.model.ReleaseRecord">
		UPDATE RELEASE_RECORD
		<trim prefix="SET" suffixOverrides=",">
	        		<if test="orgId != null">
	        			ORG_ID = #{orgId},
	        		</if>
	        		<if test="deviceId != null">
	        			DEVICE_ID = #{deviceId},
	        		</if>
	        		<if test="status != null">
	        			STATUS = #{status},
	        		</if>
	        		<if test="releaseDate != null">
	        			RELEASE_DATE = #{releaseDate},
	        		</if>
	        		<if test="crtDate != null">
	        			CRT_DATE = #{crtDate},
	        		</if>
	        		<if test="deviceType != null">
	        			DEVICE_TYPE = #{deviceType},
	        		</if>
	        		<if test="lastDate != null">
	        			LAST_DATE = #{lastDate},
	        		</if>
	        		<if test="templateId != null">
	        			TEMPLATE_ID = #{templateId},
	        		</if>
		</trim>
		<where>
			ID = #{id}
		</where>
	</update>

	<update id="updateStatus" parameterType="map">
		UPDATE RELEASE_RECORD
		<trim prefix="SET" suffixOverrides=",">
	        		<if test="status != null">
	        			STATUS = #{status},
	        		</if>
	        		<if test="releaseDate != null">
	        			RELEASE_DATE = #{releaseDate},
	        		</if>
	        		<if test="lastDate != null">
	        			LAST_DATE = #{lastDate},
	        		</if>
	        		<if test="templateId != null">
	        			TEMPLATE_ID = #{templateId},
	        		</if>
		</trim>
		<where>
			ORG_ID = #{orgid}
			<if test="deviceid != null">
				AND DEVICE_ID = #{deviceid}
			</if>
			<if test="devType != null">
				AND DEVICE_TYPE = #{devType}
			</if>
		</where>
	</update>
	
	<update id="updateTempId" parameterType="map">
		UPDATE RELEASE_RECORD
		<trim prefix="SET" suffixOverrides=",">
	        		<if test="lastDate != null">
	        			LAST_DATE = #{lastDate},
	        		</if>
	        		<if test="templateId != null">
	        			TEMPLATE_ID = #{templateId},
	        		</if>
		</trim>
		<where>
			ORG_ID=#{orgId}
			<if test="deviceId != null">
			AND DEVICE_ID = #{deviceId} AND DEVICE_TYPE is null
			</if>
			<if test="devType != null">
			AND DEVICE_TYPE = #{devType} AND DEVICE_ID is null
			</if>
			AND COLUMN_ID = #{colId}
		</where>
	</update>
	
	<delete id="delete" parameterType="map">
    <![CDATA[
        delete from RELEASE_RECORD
    ]]>
		<where>
			ID = #{id}
		</where>
	</delete>

	<delete id="batchDelete" parameterType="java.util.List">
		<![CDATA[
        delete from RELEASE_RECORD
    	]]>
    	<where>
			ID in 
			<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>
	</delete>
	
	<delete id="delAllByColids" parameterType="java.util.List">
		<![CDATA[
        delete from RELEASE_RECORD
    	]]>
    	<where>
			COLUMN_ID in 
			<foreach collection="colIds" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
			or COLUMN_ID in (select ID from ORG_PUB_COLUMN where QUOTE_ID in
			<foreach collection="colIds" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
			)
		</where>
	</delete>
	
	<delete id="delByColids" parameterType="java.util.List">
		<![CDATA[
        delete from RELEASE_RECORD
    	]]>
    	<where>
    		ORG_ID = #{orgId} 
    		<if test="deviceId != null">
    		and DEVICE_ID = #{deviceId}
    		</if>
    		<if test="deviceType != null">
    		and DEVICE_TYPE = #{deviceType} and DEVICE_ID is null
    		</if>
			and COLUMN_ID in 
			<foreach collection="colIds" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>
	</delete>
	
	<delete id="delByDevType" parameterType="map">
		delete from RELEASE_RECORD where ORG_ID=#{orgId} and DEVICE_TYPE=#{deviceType} and DEVICE_ID is null
	</delete>
	
	<delete id="delByDeviceid" parameterType="map">
		delete from RELEASE_RECORD where ORG_ID=#{orgId} and DEVICE_ID=#{deviceId} and DEVICE_TYPE is null
	</delete>
	
	<select id="getById" resultMap="releaseRecordResult">
		select
		<include refid="commonColumns" />
	    <![CDATA[
	        from RELEASE_RECORD 
	        where 
		        ID = #{id} 
	    ]]>
	</select>

	<select id="count" resultType="long">
    <![CDATA[
        select count(*) from RELEASE_RECORD
    ]]>
    <include refid="dynamicWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="pageSelect" resultMap="releaseRecordResult">
		select
		<include refid="commonColumns" />
	    <![CDATA[
	        from RELEASE_RECORD 
	    ]]>
		<include refid="dynamicWhere" />
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<select id="findRecords" resultMap="releaseRecordResult">
		select
		<include refid="commonColumns" />
	    <![CDATA[
	        from RELEASE_RECORD 
	    ]]>
		<include refid="dynamicWhere" />
	</select>
</mapper>
