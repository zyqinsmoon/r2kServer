<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.apabi.r2k.security.model.AuthEntity">
    <resultMap id="authEntityResult" type="com.apabi.r2k.security.model.AuthEntity">
        <result property="id" column="ID"/>
        <result property="entityCode" column="ENTITY_CODE"/>
        <result property="entityName" column="ENTITY_NAME"/>
        <result property="entityDesc" column="ENTITY_DESC"/>
        <result property="crtDate" column="CRT_DATE"/>
        <result property="lastUpdate" column="LAST_UPDATE"/>
        <result property="order" column="ORDER"/>
        <collection property="authReses" javaType="java.util.List" resultMap="com.apabi.r2k.security.model.AuthRes.authResResult"></collection>
    </resultMap>
    

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        	ID ,
        	ENTITY_CODE ,
        	ENTITY_NAME ,
        	ENTITY_DESC ,
        	CRT_DATE ,
        	LAST_UPDATE 
	    ]]>
	</sql>

	<sql id="dynamicWhere">
	   <trim prefix="WHERE" prefixOverrides="AND|OR">
	      	<if test="id != null">
	             ID = #{id}
	       </if>
	      <if test="entityCode !=null">
	             ENTITY_CODE = #{entityCode}
	       </if>
	      <if test="entityName !=null">
	             ENTITY_NAME = #{entityName}
	       </if>
	      <if test="entityDesc !=null">
	             ENTITY_DESC = #{entityDesc}
	       </if>
	      <if test="crtDate !=null">
	             CRT_DATE = #{crtDate}
	       </if>
	      <if test="lastUpdate !=null">
	             LAST_UPDATE = #{lastUpdate}
	       </if>
	      <if test="ids !=null">
	       		ID in (#{ids})
	       </if>
	    </trim>	
	</sql>
	
    <insert id="insert" parameterType="com.apabi.r2k.security.model.AuthEntity">
    <![CDATA[
        INSERT INTO
        AUTH_ENTITY (
        	ID ,
        	ENTITY_CODE ,
        	ENTITY_NAME ,
        	ENTITY_DESC ,
        	CRT_DATE ,
        	LAST_UPDATE 
        ) VALUES (
        	#{id} ,
        	#{entityCode} ,
        	#{entityName} ,
        	#{entityDesc} ,
        	#{crtDate} ,
        	#{lastUpdate} 
        )
    ]]>
        <selectKey resultType="long"  keyProperty="id"  >
            SELECT  SEQ_AUTH_RES.nextval AS ID FROM DUAL
        </selectKey>
    </insert>

    <update id="update" parameterType="com.apabi.r2k.security.model.AuthEntity">
    <![CDATA[
        UPDATE AUTH_ENTITY SET
	        ENTITY_CODE = #{entityCode} ,
	        ENTITY_NAME = #{entityName} ,
	        ENTITY_DESC = #{entityDesc} ,
	        CRT_DATE = #{crtDate} ,
	        LAST_UPDATE = #{lastUpdate} 
        WHERE 
	        ID = #{id} 
    ]]>
    </update>


    <delete id="delete" parameterType="map">
    <![CDATA[
        delete from AUTH_ENTITY
    ]]>
		<include refid="dynamicWhere"/>
    </delete>
   
    
    <select id="getById" resultMap="authEntityResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	        from AUTH_ENTITY 
	        where 
		        ID = #{id} 
	    ]]>
    </select>
	 
    <select id="count" resultType="long">
    <![CDATA[
        select count(*) from AUTH_ENTITY
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="authEntityResult">
    	select <include refid="commonColumns"/>
	    <![CDATA[
	        from AUTH_ENTITY 
	    ]]>
		<include refid="dynamicWhere"/>
		<if test="sortColumns != null">
			ORDER BY #{sortColumns}
		</if>
    </select>
    
    <select id="authTree" resultMap="authEntityResult">
    	select e.ID,e.ENTITY_CODE,e.ENTITY_NAME,e.ENTITY_DESC,e.CRT_DATE,e.LAST_UPDATE,e.ORDER,
    	r.ID,r.RES_CODE,r.RES_NAME,r.RES_DESC,r.PARENT_ID,r.RES_URL,r.CRT_DATE,r.ROLE_CODE,
    	r.TYPE,r.ENTITY_ID,r.LAST_UPDATE,r.VIEW_ORDER 
    	from AUTH_ENTITY e
    	join AUTH_RES r
    	on e.ID = r.ENTITY_ID and r.TYPE = 2
    	join AUTH_RES_ROLE rr
    	on r.ID = rr.RES_ID
    	join AUTH_ROLE ro
    	on rr.ROLE_ID = ro.ID and ro.ROLE_CODE in 
    	<foreach collection="roleIds" index="index" item="roleId" open="(" separator="," close=")">
    	#{roleId}
    	</foreach>
    	order by e.ORDER asc,r.VIEW_ORDER asc
    </select>
</mapper>
